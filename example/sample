


;;; prog: {
;;;    w: f32
;;;    duck: {
;;;       x: b.d {
;;;          a; 5
;;;       }
;;;       b: { a; 9 }
      
;;;    }
;;;    b: {
;;;       a; 10
;;;       k: d {}
;;;       d: {
;;;          a;
;;;          m; 9
;;;          q: i64
;;;       }
;;;    }
;;; }


add: num num -> num, |x y| x y +


addition: |x y| x maybe y maybe → num,
   | x y | x y +



;; colors: [red yellow green blue violet] enum

;; a: b: c; 10

e: f64 -> f64, !! 1 + (×) // 1÷ (+) / 1 +

;; hi: f32, 10

;; quad: {
;; 	a: b: c: f32

;; 	dis; b 2 * [4 a c] (×) / -
;; 	squ; dis 0.5 *
;; 	den; 2 a ×

;; 	pos; b 0- squ - den ÷
;; 	neg; b 0- squ + den ÷
;; }
